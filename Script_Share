-- // ReGui Base
local ReGui = loadstring(game:HttpGet('https://raw.githubusercontent.com/depthso/Dear-ReGui/refs/heads/main/ReGui.lua'))()
local PrefabsId = `rbxassetid://{ReGui.PrefabsId}`

ReGui:Init({
    Prefabs = game:GetService("InsertService"):LoadLocalAsset(PrefabsId)
})

-- // Global Variables
_G.BlurAmount = 15
_G.BlurEffect = Instance.new("BlurEffect", game.Lighting)
_G.BlurEffect.Size = _G.BlurAmount

_G.SunFlare = Instance.new("SunRaysEffect", game.Lighting)
_G.SunFlare.Intensity = 0.059
_G.SunFlare.Spread = 0.356

_G.ColorCorrection = Instance.new("ColorCorrectionEffect", game.Lighting)
_G.ColorCorrection.TintColor = Color3.new(1, 1, 1) -- Default putih

-- // Shader Functions
local function normalshader()
    _G.ColorCorrection.TintColor = Color3.new(1, 1, 1) -- Putih normal
end

local function pinkshader()
    _G.ColorCorrection.TintColor = Color3.new(1, 0.5, 0.8) -- Warna pink
end

-- // Motion Blur Script
local function motionBlurScript()
    local Camera = game.Workspace.CurrentCamera
    local Last = Camera.CFrame.lookVector

    game:GetService("RunService").Heartbeat:Connect(function()
        if not _G.BlurEffect or _G.BlurEffect.Parent == nil then
            _G.BlurEffect = Instance.new("BlurEffect", game.Lighting)
        end
        
        local magnitude = (Camera.CFrame.lookVector - Last).magnitude
        _G.BlurEffect.Size = math.abs(magnitude) * _G.BlurAmount
        Last = Camera.CFrame.lookVector
    end)
end

-- Jalankan Motion Blur Script
motionBlurScript()

-- // Window GUI
local Window = ReGui:Window({
    Title = "LunaRay",
    Size = UDim2.fromOffset(300, 150) -- Tambah ukuran agar muat 2 tombol sejajar
})

Window:Label({Text="Shader"})

-- Tombol Normal
Window:Button({
    Text = "Normal",
    Callback = function()
        normalshader()
    end,
})

-- Tombol Pink
Window:Button({
    Text = "Pink",
    Callback = function()
        pinkshader()
    end,
})

Window:Label({Text="Shader Config"})

Window:SliderInt({
    Label = "Motion Blur",
    Value = _G.BlurAmount,
    Minimum = 1,
    Maximum = 20,
    Callback = function(value)
        _G.BlurAmount = value
        if _G.BlurEffect then
            _G.BlurEffect.Size = value
        end
    end
})

Window:SliderFloat({
    Label = "Sun Rays Effect [Intensity]",
    Value = _G.SunFlare.Intensity,
    Minimum = 0,
    Maximum = 1,
    Callback = function(value)
        if _G.SunFlare then
            _G.SunFlare.Intensity = value
        end
    end
})

Window:SliderFloat({
    Label = "Sun Rays Effect [Spread]",
    Value = _G.SunFlare.Spread,
    Minimum = 0,
    Maximum = 1,
    Callback = function(value)
        if _G.SunFlare then
            _G.SunFlare.Spread = value
        end
    end
})
